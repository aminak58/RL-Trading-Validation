# Complete Freqtrade RL Trading Container
# Includes entire project: code, data, dependencies

FROM python:3.10-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV TZ=UTC
ENV WORKDIR=/freqtrade

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    wget \
    curl \
    gcc \
    g++ \
    make \
    libhdf5-dev \
    libblas-dev \
    liblapack-dev \
    gfortran \
    && rm -rf /var/lib/apt/lists/*

# Install TA-Lib (required for technical indicators)
RUN wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz && \
    tar -xzf ta-lib-0.4.0-src.tar.gz && \
    cd ta-lib/ && \
    ./configure --prefix=/usr && \
    make && \
    make install && \
    cd .. && \
    rm -rf ta-lib*

# Install Freqtrade and dependencies
RUN pip install --no-cache-dir freqtrade

# Copy complete requirements
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Create working directory
WORKDIR /freqtrade

# Create project structure
RUN mkdir -p user_data/{strategies,freqaimodels,configs,data,models,notebooks,results}

# Copy ALL project files
COPY . /freqtrade/

# Set proper permissions
RUN chmod +x user_data/strategies/*.py user_data/freqaimodels/*.py

# Create entrypoint script for easy execution
RUN cat > /usr/local/bin/freqtrade-rl.sh << 'EOF'
#!/bin/bash
set -e

echo "üöÄ Freqtrade RL Trading Container"
echo "================================="
echo "Working directory: $(pwd)"
echo "Container includes: Complete RL-Trading-Validation project"
echo ""

# Function to show menu
show_menu() {
    echo "Available commands:"
    echo "1. train    - Train RL model"
    echo "2. backtest - Run backtest"
    echo "3. analyze  - Start analysis notebook"
    echo "4. shell    - Start interactive shell"
    echo "5. status   - Show container status"
    echo ""
}

# Check if data exists
check_data() {
    if [ ! -d "user_data/data/binance" ]; then
        echo "‚ö†Ô∏è  Trading data not found in user_data/data/binance"
        echo "   Make sure data was copied during container build"
        return 1
    else
        echo "‚úÖ Trading data found"
        return 0
    fi
}

# Main execution logic
case "$1" in
    "train")
        echo "üß† Starting RL training..."
        check_data
        freqtrade backtesting --config user_data/configs/config_rl_hybrid.json --strategy MtfScalper_RL_Hybrid --freqaimodel MtfScalperRLModel --timeframe 5m --timerange 20240101-20240201
        ;;
    "backtest")
        echo "üìä Running backtest..."
        check_data
        freqtrade backtesting --config user_data/configs/config_rl_hybrid.json --strategy MtfScalper_RL_Hybrid --freqaimodel MtfScalperRLModel --timerange 20240301-20240401 --breakdown day
        ;;
    "analyze")
        echo "üìì Starting analysis..."
        pip install jupyter
        cd user_data/notebooks
        jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''
        ;;
    "status")
        echo "üìã Container Status:"
        echo "   - Project: RL-Trading-Validation"
        echo "   - Strategy: MtfScalper_RL_Hybrid"
        echo "   - Model: MtfScalperRLModel"
        echo "   - Data: $(du -sh user_data/data/ 2>/dev/null || echo 'Not found')"
        echo "   - Models: $(du -sh user_data/models/ 2>/dev/null || echo 'Not found')"
        check_data
        ;;
    "shell"|*)
        if [ "$1" != "shell" ] && [ "$1" != "" ]; then
            echo "‚ùå Unknown command: $1"
            show_menu
        fi
        echo "üñ•Ô∏è Starting interactive shell..."
        show_menu
        /bin/bash
        ;;
esac
EOF

RUN chmod +x /usr/local/bin/freqtrade-rl.sh

# Set default command
CMD ["freqtrade-rl.sh", "shell"]

# Expose Jupyter port
EXPOSE 8888

# Labels for better organization
LABEL maintainer="RL Trading Team"
LABEL description="Complete Freqtrade RL Trading Strategy"
LABEL version="1.0"
LABEL project="RL-Trading-Validation"